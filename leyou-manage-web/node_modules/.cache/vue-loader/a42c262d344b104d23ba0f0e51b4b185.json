{"remainingRequest":"F:\\leyou_Demo\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\leyou_Demo\\leyou-manage-web\\src\\views\\item\\MyBrand.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\leyou_Demo\\leyou-manage-web\\src\\views\\item\\MyBrand.vue","mtime":1575780150963},{"path":"F:\\leyou_Demo\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\leyou_Demo\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\leyou_Demo\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"F:\\leyou_Demo\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\leyou_Demo\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data() {\n        return {\n            dialog: false,     //设置会话框的打开   false不打开，true打开\n            headers: [\n                {\n                    text: 'id',\n                    align: 'center',\n                    sortable: false,\n                    value: 'id'\n                },\n                {text: '名称', align: 'center', value: 'name'},\n                {text: 'LOGO', align: 'center', value: 'image'},\n                {text: '首字母', align: 'center', value: 'letter'},\n                {text: 'Actions', align: 'center', value: 'id', sortable: false}\n            ],\n            search: '',  //搜索过滤字段\n            totalBrands: 0,  //总条数\n            brands: [],\n            pagination: {},     //分页需要定义该对象\n            editedIndex: -1,\n            editedItem: {     //新增时的默认数据\n                id: '',\n                name: 0,\n                image: 0,\n                letter: 0\n            },\n            defaultItem: {     //新增时close的默认数据\n                id: '',\n                name: 0,\n                image: 0,\n                letter: 0\n            }\n        }\n    },\n\n    computed: {\n        formTitle () {\n            return this.editedIndex === -1 ? 'New Item' : 'Edit Item'\n        }\n    },\n    mounted(){\n        this.getDataFromServer();\n    },\n    watch: {\n        dialog (val) {\n            val || this.close()\n        },\n        pagination: {   //监视pagination属性的变化\n            deep: true,   //deep为true，会监视pagination的属性及属性中的对象属性变化\n            handler(){\n                //变化后的回调函数\n                this.getDataFromServer();\n            }\n        },\n        serch: {  //监视搜索字段\n            handler(){\n                this.getDataFromServer();\n            }\n        }\n    },\n\n    created () {\n        this.initialize()\n    },\n\n    methods: {\n        initialize () {\n            this.brands = [\n                {\n                    id: 'Frozen Yogurt',\n                    name: 159,\n                    image: 6.0,\n                    letter: 24\n                },\n                {\n                    id: 'Ice cream sandwich',\n                    name: 237,\n                    image: 9.0,\n                    letter: 37\n                },\n                {\n                    id: 'Eclair1',\n                    name: 262,\n                    image: 16.0,\n                    letter: 23\n                },\n                {\n                    id: 'Eclair2',\n                    name: 262,\n                    image: 16.0,\n                    letter: 23\n                },\n                {\n                    id: 'Eclair3',\n                    name: 262,\n                    image: 16.0,\n                    letter: 23\n                },\n                {\n                    id: 'Eclair4',\n                    name: 262,\n                    image: 16.0,\n                    letter: 23\n                },\n                {\n                    id: 'Eclai5r',\n                    name: 262,\n                    image: 16.0,\n                    letter: 23\n                },\n                {\n                    id: 'Eclai6r',\n                    name: 262,\n                    image: 16.0,\n                    letter: 23\n                },\n                {\n                    id: 'Eclai3r',\n                    name: 262,\n                    image: 16.0,\n                    letter: 23\n                },\n                {\n                    id: 'Ecla5ir',\n                    name: 262,\n                    image: 16.0,\n                    letter: 23\n                }\n            ]\n        },\n        getDataFromServer(){\n            this.$http.get(\"/item/brand/page\",{\n                params:{\n                    key: this.search,\n                    page: this.pagination.page,  //当前页\n                    rows: this.pagination.rowsPerPage, //每页大小\n                    sorBy: this.pagination.sorBy,  //排序字段\n                    desc: this.pagination.descending   //是否降序\n                }\n            }).then(resp => {\n                console.log(resp);\n                this.brands = resp.data.items;\n                this.totalBrands = resp.data.total;\n            })\n        },\n\n        editItem (item) {\n            this.editedIndex = this.brands.indexOf(item)\n            this.editedItem = Object.assign({}, item)\n            this.dialog = true\n        },\n\n        deleteItem (item) {\n            const index = this.brands.indexOf(item)\n            confirm('Are you sure you want to delete this item?') && this.brands.splice(index, 1)\n        },\n\n        close () {\n            this.dialog = false\n            setTimeout(() => {\n                //Object.assign方法用来将源对象（source）的所有可枚举属性，复制到目标对象（target）。它至少需要两个对象作为参数，第一个参数\n                // 是目标对象，后面的参数都是源对象。\n                this.editedItem = Object.assign({}, this.defaultItem)\n                this.editedIndex = -1\n            }, 300)\n        },\n\n        save () {\n            if (this.editedIndex > -1) {\n                Object.assign(this.brands[this.editedIndex], this.editedItem)\n            } else {\n                this.brands.push(this.editedItem)\n            }\n            this.close()\n        }\n    }\n}\n",{"version":3,"sources":["MyBrand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyBrand.vue","sourceRoot":"src/views/item","sourcesContent":["<template>\n  <div>\n    <v-toolbar flat color=\"white\">\n      <!--<v-toolbar-title>My CRUD 11</v-toolbar-title>-->\n      <!--<v-divider-->\n              <!--class=\"mx-2\"-->\n              <!--inset-->\n              <!--vertical-->\n      <!--&gt;</v-divider>-->\n\n\n      <v-dialog v-model=\"dialog\" max-width=\"500px\">\n        <template v-slot:activator=\"{ on }\">\n          <!--<v-card-title>-->\n          <v-btn color=\"primary\" dark class=\"mb-2\" v-on=\"on\">新增</v-btn>\n          <!--相当于占位符，空格-->\n          <v-spacer/>\n          <v-spacer/>\n          <!--搜索框，与search属性关联-->\n          <v-text-field label=\"输入关键字搜索\" hide-details v-model=\"search\" append-icon=\"search\"/>\n          <!--</v-card-title>-->\n        </template>\n        <!--<v-text-field label=\"输入关键字搜索\" hide-details v-model=\"search\" append-icon=\"search\"/>-->\n        <v-card>\n          <v-card-title>\n            <span class=\"headline\">{{ formTitle }}</span>\n          </v-card-title>\n\n\n          <!--新增页面的弹框-->\n          <v-card-text>\n            <v-container grid-list-md>\n              <v-layout wrap>\n                <v-flex xs12 sm6 md4 >\n                  <v-text-field v-model=\"editedItem.id\" label=\"id\" ></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedItem.name\" label=\"name\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedItem.image\" label=\"image\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedItem.letter\" label=\"letter\"></v-text-field>\n                </v-flex>\n              </v-layout>\n            </v-container>\n          </v-card-text>\n          <!--保存-->\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"blue darken-1\" flat @click=\"close\">Cancel</v-btn>\n            <v-btn color=\"blue darken-1\" flat @click=\"save\">Save</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-toolbar>\n    <!--数据的列和表头的列-->\n    <v-data-table\n            :headers=\"headers\"\n            :items=\"brands\"\n            class=\"elevation-1\"\n    >\n      <!--数据的列-->\n      <template v-slot:items=\"props\">\n        <td class=\"text-xs-center\">{{ props.item.id }}</td>\n        <td class=\"text-xs-center\">{{ props.item.name }}</td>\n        <td class=\"text-xs-center\">{{ props.item.image }}</td>\n        <td class=\"text-xs-center\">{{ props.item.letter }}</td>\n        <td class=\"justify-center layout px-0\">\n          <v-icon\n                  small\n                  class=\"mr-2\"\n                  @click=\"editItem(props.item)\"\n          >\n            edit\n          </v-icon>\n          <v-icon\n                  small\n                  @click=\"deleteItem(props.item)\"\n          >\n            delete\n          </v-icon>\n        </td>\n      </template>\n      <template v-slot:no-data>\n        <v-btn color=\"primary\" @click=\"initialize\">Reset</v-btn>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                dialog: false,     //设置会话框的打开   false不打开，true打开\n                headers: [\n                    {\n                        text: 'id',\n                        align: 'center',\n                        sortable: false,\n                        value: 'id'\n                    },\n                    {text: '名称', align: 'center', value: 'name'},\n                    {text: 'LOGO', align: 'center', value: 'image'},\n                    {text: '首字母', align: 'center', value: 'letter'},\n                    {text: 'Actions', align: 'center', value: 'id', sortable: false}\n                ],\n                search: '',  //搜索过滤字段\n                totalBrands: 0,  //总条数\n                brands: [],\n                pagination: {},     //分页需要定义该对象\n                editedIndex: -1,\n                editedItem: {     //新增时的默认数据\n                    id: '',\n                    name: 0,\n                    image: 0,\n                    letter: 0\n                },\n                defaultItem: {     //新增时close的默认数据\n                    id: '',\n                    name: 0,\n                    image: 0,\n                    letter: 0\n                }\n            }\n        },\n\n        computed: {\n            formTitle () {\n                return this.editedIndex === -1 ? 'New Item' : 'Edit Item'\n            }\n        },\n        mounted(){\n            this.getDataFromServer();\n        },\n        watch: {\n            dialog (val) {\n                val || this.close()\n            },\n            pagination: {   //监视pagination属性的变化\n                deep: true,   //deep为true，会监视pagination的属性及属性中的对象属性变化\n                handler(){\n                    //变化后的回调函数\n                    this.getDataFromServer();\n                }\n            },\n            serch: {  //监视搜索字段\n                handler(){\n                    this.getDataFromServer();\n                }\n            }\n        },\n\n        created () {\n            this.initialize()\n        },\n\n        methods: {\n            initialize () {\n                this.brands = [\n                    {\n                        id: 'Frozen Yogurt',\n                        name: 159,\n                        image: 6.0,\n                        letter: 24\n                    },\n                    {\n                        id: 'Ice cream sandwich',\n                        name: 237,\n                        image: 9.0,\n                        letter: 37\n                    },\n                    {\n                        id: 'Eclair1',\n                        name: 262,\n                        image: 16.0,\n                        letter: 23\n                    },\n                    {\n                        id: 'Eclair2',\n                        name: 262,\n                        image: 16.0,\n                        letter: 23\n                    },\n                    {\n                        id: 'Eclair3',\n                        name: 262,\n                        image: 16.0,\n                        letter: 23\n                    },\n                    {\n                        id: 'Eclair4',\n                        name: 262,\n                        image: 16.0,\n                        letter: 23\n                    },\n                    {\n                        id: 'Eclai5r',\n                        name: 262,\n                        image: 16.0,\n                        letter: 23\n                    },\n                    {\n                        id: 'Eclai6r',\n                        name: 262,\n                        image: 16.0,\n                        letter: 23\n                    },\n                    {\n                        id: 'Eclai3r',\n                        name: 262,\n                        image: 16.0,\n                        letter: 23\n                    },\n                    {\n                        id: 'Ecla5ir',\n                        name: 262,\n                        image: 16.0,\n                        letter: 23\n                    }\n                ]\n            },\n            getDataFromServer(){\n                this.$http.get(\"/item/brand/page\",{\n                    params:{\n                        key: this.search,\n                        page: this.pagination.page,  //当前页\n                        rows: this.pagination.rowsPerPage, //每页大小\n                        sorBy: this.pagination.sorBy,  //排序字段\n                        desc: this.pagination.descending   //是否降序\n                    }\n                }).then(resp => {\n                    console.log(resp);\n                    this.brands = resp.data.items;\n                    this.totalBrands = resp.data.total;\n                })\n            },\n\n            editItem (item) {\n                this.editedIndex = this.brands.indexOf(item)\n                this.editedItem = Object.assign({}, item)\n                this.dialog = true\n            },\n\n            deleteItem (item) {\n                const index = this.brands.indexOf(item)\n                confirm('Are you sure you want to delete this item?') && this.brands.splice(index, 1)\n            },\n\n            close () {\n                this.dialog = false\n                setTimeout(() => {\n                    //Object.assign方法用来将源对象（source）的所有可枚举属性，复制到目标对象（target）。它至少需要两个对象作为参数，第一个参数\n                    // 是目标对象，后面的参数都是源对象。\n                    this.editedItem = Object.assign({}, this.defaultItem)\n                    this.editedIndex = -1\n                }, 300)\n            },\n\n            save () {\n                if (this.editedIndex > -1) {\n                    Object.assign(this.brands[this.editedIndex], this.editedItem)\n                } else {\n                    this.brands.push(this.editedItem)\n                }\n                this.close()\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}